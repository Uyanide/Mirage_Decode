function u(e){return e instanceof Error?e:new Error(String(e))}const p={"image/jpeg":e=>e.startsWith("ÿØ"),"image/png":e=>e.startsWith(`PNG\r

`),"image/gif":e=>e.startsWith("GIF87a")||e.startsWith("GIF89a"),"image/webp":e=>e.startsWith("RIFF")&&e.slice(8,12)==="WEBP","image/bmp":e=>e.startsWith("BM"),"image/avif":e=>e.slice(4,8)==="ftyp"&&(e.slice(8,12)==="avif"||e.slice(8,12)==="avis"),"image/heic":e=>e.slice(4,8)==="ftyp"&&(e.slice(8,12)==="heic"||e.slice(8,12)==="heix"),"image/heif":e=>e.slice(4,8)==="ftyp"&&(e.slice(8,12)==="mif1"||e.slice(8,12)==="msf1"),"image/tiff":e=>e.startsWith("II*\0")||e.startsWith("MM\0*"),"image/x-icon":e=>e.startsWith("\0\0\0"),"image/svg+xml":e=>e.includes("<svg")||e.startsWith("<?xml")&&e.includes("svg"),"image/jxl":e=>e.startsWith(`ÿ
`)||e.startsWith(`\0\0\0\fJXL \r

`)};function w(e){const s=String.fromCharCode(...e.slice(0,20));for(const[a,o]of Object.entries(p))if(o(s))return a;return""}const c=[],d=[];let n=!1,l=!1;self.onmessage=e=>{const s=e.data;switch(s.type){case"init":if(n&&postMessage({success:!0,payload:{decoderCount:c.length}}),g.isAvailable())try{c.push(new g)}catch(a){console.error("Failed to initialize ImageDecoderImageDecoderImpl:",a)}if(m.isAvailable())try{c.push(new m)}catch(a){console.error("Failed to initialize ImageDecoderCanvasImpl:",a)}c.length===0&&postMessage({success:!1,error:"No image decoder available"}),n=!0,postMessage({success:!0,payload:{decoderCount:c.length}});break;case"decode":n||postMessage({success:!1,id:s.id,error:"Worker is not initialized"}),d.push(s),l||(l=!0,y().catch(a=>{console.error("Error processing image queue:",a),postMessage({success:!1,id:s.id,error:a instanceof Error?a.message:"Unknown error"})}).finally(()=>{l=!1}));break}};async function y(){for(;d.length>0;){const{id:e,payload:s}=d.shift(),a=new Uint8Array(s.fileData),o=w(a);let i=!1;for(const t of c)try{const r=await t.decode(a,o);console.log(`Successfully decoded image with ${t.constructor.name}`),postMessage({success:!0,id:e,payload:{width:r.width,height:r.height,data:r.data.buffer}},{transfer:[r.data.buffer]}),i=!0;break}catch(r){console.error(`Error decoding image with ${t.constructor.name}:`,r)}i||postMessage({success:!1,id:e,error:`Failed to decode image with mime type ${o}`})}}class f{}class g extends f{static isAvailable(){return typeof ImageDecoder<"u"}async decode(s,a){const i=await new ImageDecoder({data:s.buffer,type:a,colorSpaceConversion:"none",preferAnimation:!1}).decode(),t=new ArrayBuffer(i.image.allocationSize({format:"RGBA"}));await i.image.copyTo(t,{format:"RGBA"});const r=new ImageData(new Uint8ClampedArray(t),i.image.codedWidth,i.image.codedHeight);return i.image.close(),r}}class m extends f{static isAvailable(){return typeof OffscreenCanvas<"u"}canvas;constructor(){if(super(),this.canvas=new OffscreenCanvas(0,0),!this.canvas.getContext("2d"))throw new Error("Failed to get offscreen canvas context")}async decode(s,a){try{const o=new Blob([s.buffer],{type:a}),i=await createImageBitmap(o);this.canvas.width=i.width,this.canvas.height=i.height;const t=this.canvas.getContext("2d");if(!t)throw new Error("Failed to get offscreen canvas context");try{t.imageSmoothingEnabled=!1,t.mozImageSmoothingEnabled=!1,t.webkitImageSmoothingEnabled=!1,t.msImageSmoothingEnabled=!1}catch(h){console.warn("Failed to set image smoothing properties:",h)}t.drawImage(i,0,0);const r=t.getImageData(0,0,this.canvas.width,this.canvas.height);return i.close(),r}catch(o){throw u(o)}}}
